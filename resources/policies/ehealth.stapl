new PolicySet("jisa13-final3")(
  target = action.id === "view" & resource.type_ === "patientstatus",
  pca = DenyOverrides,   
  subpolicies = List(
    // The consent policy.
    new PolicySet("policy:1")(
        target = "medical_personnel" in subject.roles,
        pca = PermitOverrides,
        subpolicies = List(
	        new Policy("consent")(
	            target = AlwaysTrue,
	            effect = Deny,
	            condition = subject.id in resource.owner_withdrawn_consents),
	        new Policy("breaking-glass")(
	            target = AlwaysTrue,
	            effect = Permit,
	            condition = subject.triggered_breaking_glass,
	            obligationActions = List(log(subject.id + " performed breaking-the-glass procedure")))
	    ),
	    obligations = List(
	        new Obligation(log("just another log on Permit"), Permit)
	    )
    ),
    
    // Only physicians, nurses and patients can access the monitoring system.
    new Policy("policy:2")(
        target = AlwaysTrue,
        effect = Deny,
        condition = !(("nurse" in subject.roles) | ("physician" in subject.roles) | ("patient" in subject.roles))),
    
    // For physicians.
    new PolicySet("policyset:2")(
      target = "physician" in subject.roles,
      pca = FirstApplicable,  
      subpolicies = List(
	      // Of the physicians, only gps, physicians of the cardiology department, physicians of the elder care department and physicians of the emergency department can access the monitoring system.
	      new Policy("policy:3")(
	        target = AlwaysTrue,
	        effect = Deny,
	        condition = !((subject.department === "cardiology") | (subject.department === "elder_care") | (subject.department === "emergency") | ("gp" in subject.roles))),
	      
	      // All of the previous physicians can access the monitoring system in case of emergency.
	      new Policy("policy:4")(
	        target = (subject.department === "cardiology") | (subject.department === "elder_care") | (subject.department === "emergency"),
	        effect = Permit,
	        condition = (subject.triggered_breaking_glass | resource.operator_triggered_emergency | resource.indicates_emergency)),
	      
	      // For GPs: only permit if in consultation or treated in the last six months or primary physician or responsible in the system.
	      OnlyPermitIff("policyset:3")(
	          target = "gp" in subject.roles,
	          (resource.owner_id === subject.current_patient_in_consultation)
	          | (resource.owner_id in subject.treated_in_last_six_months)
	          | (resource.owner_id in subject.primary_patients)
	          | (subject.id in resource.owner_responsible_physicians)
	      ),
	      
	      // For cardiologists.
	      new PolicySet("policyset:4")(
	        target = subject.department === "cardiology",
	        pca = PermitOverrides,  
	        subpolicies = List(
		        // Permit for head physician.
		        new Policy("policy:7")(
		            target = subject.is_head_physician,
		            effect = Permit),
		        
		        // Permit if treated the patient or treated in team.
		        new Policy("policy:8")(
		            target = (resource.owner_id in subject.treated) | (resource.owner_id in subject.treated_by_team),
		            effect = Permit),
		        
		        defaultDeny("policy:9")
		    )
	      ),
	      
	      // For physicians of elder care department: only permit if admitted in care unit or treated in the last six months.
	      OnlyPermitIff("policyset:5")(
	          target = subject.department === "elder_care",
	          (resource.owner_id in subject.admitted_patients_in_care_unit)
	          | (resource.owner_id in subject.treated_in_last_six_months)
	      ),
	      
	      // For physicians of emergency department: only permit if patient status is bad (or the above).
	      OnlyPermitIff("policyset:6")(
	          target = subject.department === "emergency",   
	          resource.patient_status === "bad"
	      )
	  )
    ),
    
    // For nurses.
    new PolicySet("policyset:7")(
      target = "nurse" in subject.roles,
      pca = FirstApplicable,    
      subpolicies = List(
	      // Of the nurses, only nurses of the cardiology department or the elder care department can access the PMS.
	      new Policy("policy:14")(
	          target = !((subject.department === "cardiology") | (subject.department === "elder_care")),
	          effect = Deny),
	      
	      // Nurses can only access the PMS during their shifts.
	      new Policy("policy:15")(
	          target = !((env.currentDateTime gteq subject.shift_start) & (env.currentDateTime lteq subject.shift_stop)),
	          effect = Deny),
	      
	      // Nurses can only access the PMS from the hospital.
	      new Policy("policy:16")(
	          target = !(subject.location === "hospital"),
	          effect = Deny),
	      
	      // Nurses can only view the patient's status of the last five days.
	      new Policy("policy:17")(
	          target = !(env.currentDateTime lteq (resource.created + 5.days)),
	          effect = Deny),
	      
	      // For nurses of cardiology department: they can only view the patient status of a patient 
	      // in their nurse unit for whom they are assigned responsible, up to three days after they were discharged.
	      OnlyPermitIff("policyset:8")(
	          target = subject.department === "cardiology",
	          (resource.owner_id in subject.admitted_patients_in_nurse_unit) 
	          	& (!resource.owner_discharged | (env.currentDateTime lteq (resource.owner_discharged_dateTime + 3.days)))
	      ),
	        
	      // For nurses of the elder care department.
	      new PolicySet("policyset:9")(
	        target = subject.department === "elder_care",
	        pca = DenyOverrides,
	        subpolicies = List(
		        // Of the nurses of the elder care department, only nurses who have been allowed to use the PMS can access the PMS.
		        new Policy("policy:20")(
		            target = !subject.allowed_to_access_pms,
		            effect = Deny),
		        
		        // Nurses of the elder care department can only view the patient status of a patient 
		        // who is currently admitted to their nurse unit and for whome they are assigned responsible.
		        OnlyPermitIff("policySet:10")(
		            target = AlwaysTrue,
		            (resource.owner_id in subject.admitted_patients_in_nurse_unit) 
		            	& (resource.owner_id in subject.responsible_patients)
		        )
		    )
		  )
      )
    ),
    // For patients
    new PolicySet("policyset:11")(
      target = "patient" in subject.roles,
      pca = FirstApplicable,  
      subpolicies = List(
	      // A patient can only access the PMS if (still) allowed by the hospital (e.g., has 
		  // subscribed to the PMS, but is not paying any more).
	      new Policy("policy:23")(
	          target = !subject.allowed_to_access_pms,
	          effect = Deny),
	      
	      // A patient can only view his own status.
	      new Policy("policy:24")(
	          target = !(resource.owner_id === subject.id),
	          effect = Deny),
	      
	      defaultPermit("policy:25")
	  )
    )
 )
)
